global
  maxconn 60000
  tune.ssl.default-dh-param 2048


defaults
  mode http
  balance roundrobin
  option redispatch
  option forwardfor

  timeout queue 5s
  timeout connect 5000
  timeout client 50000
  timeout server 50000


frontend http-in
  bind *:80
  default_backend Not-Websocket

  # Any URL beginning with socket.io will be flagged as 'is_websocket'
  acl is_websocket path_beg /socket.io
  acl is_websocket hdr(Upgrade) -i WebSocket
  acl is_websocket hdr_beg(Host) -i ws

  # The connection to use if 'is_websocket' is flagged
  use_backend Rustla if is_websocket

  maxconn 60000

frontend https-in
  #HOW TO: https://www.digitalocean.com/community/tutorials/how-to-secure-haproxy-with-let-s-encrypt-on-ubuntu-14-04
  bind *:443 ssl crt /etc/haproxy/certs/api.overrustle.com.pem
  default_backend Not-Websocket

  # Any URL beginning with socket.io will be flagged as 'is_websocket'
  acl is_websocket path_beg /socket.io
  acl is_websocket hdr(Upgrade) -i WebSocket
  acl is_websocket hdr_beg(Host) -i ws

  # The connection to use if 'is_websocket' is flagged
  use_backend Rustla if is_websocket

  #Lets LE requests come in without pissing off chat
  acl letsencrypt-acl path_beg /.well-known/acme-challenge/
  use_backend letsencrypt-backend if letsencrypt-acl


listen stats :6969
  mode http
  stats enable
  stats hide-version
  stats realm Haproxy\ Statistics
  stats uri /
  stats auth username:password


backend Not-Websocket
  maxconn 60000
  server localhost-9998 localhost:9998 weight 1 maxconn 60000 check


backend Rustla
  maxconn 60000
  balance source
  option http-server-close
  option forceclose
  server localhost-9998 localhost:9998 weight 1 maxconn 60000 check


backend letsencrypt-backend
  server letsencrypt 127.0.0.1:54321
